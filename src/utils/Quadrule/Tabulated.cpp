//------------------------------------------------------------------------------------------------------------
//! \file   utils/Quadrule/Tabulated.cpp
//! \brief  Contains tables of pre-computed quadrature nodes and weights.
//!
//! \author Michael Crockatt
//! \date   June 2017
//------------------------------------------------------------------------------------------------------------


# include <stdexcept>

# include "utils/Quadrule/Tabulated.hpp"


using namespace Quadrule;


//------------------------------------------------------------------------------------------------------------
//! \brief  Performs lookup of pre-computed Gauss-Legendre quadrature nodes and weights.
//!
//! If quadrature weights are not desired, then \pp{weights} may be null. This pointer is not dereferenced if
//! this is the case.
//!
//! \param[in]      n           Size of quadrature rule to compute.
//! \param[in]      nodes       Upon return contains the \f$ n \f$th set of Gauss-Legendre quadrature nodes.
//! \param[in]      weights     Upon return contains the \f$ n \f$th set of Gauss-Legendre quadrature weights
//!                             for integrating across \f$ [-1,1] \f$.
//------------------------------------------------------------------------------------------------------------
void Quadrule::GLTable (

    const int64_t n,
    double * const nodes,
    double * const weights  // = nullptr
) {

    switch ( n ) {

        case 1:
        {
            nodes[0] = 0.0;

            if ( weights == nullptr ) {  return;  }

            weights[0] = 2.0;

        } return;

        case 2:
        {
            nodes[0] = -( nodes[1] = 0.5773502691896257645091488 );

            if ( weights == nullptr ) {  return;  }

            weights[0] = weights[1] = 1.0;

        } return;

        case 3:
        {
            nodes[1] = 0.0000000000000000000000000;
            nodes[0] = -( nodes[2] = 0.7745966692414833770358531 );

            if ( weights == nullptr ) {  return;  }

            weights[1] = 0.8888888888888888888888889;
            weights[0] = weights[2] = 0.5555555555555555555555556;

        } return;

        case 4:
        {
            nodes[1] = -( nodes[2] = 0.3399810435848562648026658 );
            nodes[0] = -( nodes[3] = 0.8611363115940525752239465 );

            if ( weights == nullptr ) {  return;  }

            weights[1] = weights[2] = 0.6521451548625461426269361;
            weights[0] = weights[3] = 0.3478548451374538573730639;

        } return;

        case 5:
        {
            nodes[2] = 0.0000000000000000000000000;
            nodes[1] = -( nodes[3] =0.5384693101056830910363144 );
            nodes[0] = -( nodes[4] =0.9061798459386639927976269 );

            if ( weights == nullptr ) {  return;  }

            weights[2] = 0.5688888888888888888888889;
            weights[1] = weights[3] =0.4786286704993664680412915;
            weights[0] = weights[4] =0.2369268850561890875142640;

        } return;

        case 6:
        {
            nodes[2] = -( nodes[3] = 0.2386191860831969086305017 );
            nodes[1] = -( nodes[4] = 0.6612093864662645136613996 );
            nodes[0] = -( nodes[5] = 0.9324695142031520278123016 );

            if ( weights == nullptr ) {  return;  }

            weights[2] = weights[3] = 0.4679139345726910473898703;
            weights[1] = weights[4] = 0.3607615730481386075698335;
            weights[0] = weights[5] = 0.1713244923791703450402961;

        } return;

        case 7:
        {
            nodes[3] = 0.0000000000000000000000000;
            nodes[2] = -( nodes[4] = 0.4058451513773971669066064 );
            nodes[1] = -( nodes[5] = 0.7415311855993944398638648 );
            nodes[0] = -( nodes[6] = 0.9491079123427585245261897 );

            if ( weights == nullptr ) {  return;  }

            weights[3] = 0.4179591836734693877551020;
            weights[2] = weights[4] = 0.3818300505051189449503698;
            weights[1] = weights[5] = 0.2797053914892766679014678;
            weights[0] = weights[6] = 0.1294849661688696932706114;

        } return;

        case 8:
        {
            nodes[3] = -( nodes[4] = 0.1834346424956498049394761 );
            nodes[2] = -( nodes[5] = 0.5255324099163289858177390 );
            nodes[1] = -( nodes[6] = 0.7966664774136267395915539 );
            nodes[0] = -( nodes[7] = 0.9602898564975362316835609 );

            if ( weights == nullptr ) {  return;  }

            weights [3] = weights[4] = 0.3626837833783619829651504;
            weights [2] = weights[5] = 0.3137066458778872873379622;
            weights [1] = weights[6] = 0.2223810344533744705443560;
            weights [0] = weights[7] = 0.1012285362903762591525314;

        } return;

        case 9:
        {
            nodes[4] = 0.0000000000000000000000000;
            nodes[3] = -( nodes[5] = 0.3242534234038089290385380 );
            nodes[2] = -( nodes[6] = 0.6133714327005903973087020 );
            nodes[1] = -( nodes[7] = 0.8360311073266357942994298 );
            nodes[0] = -( nodes[8] = 0.9681602395076260898355762 );

            if ( weights == nullptr ) {  return;  }

            weights[4] = 0.3302393550012597631645251;
            weights[3] = weights[5] = 0.3123470770400028400686304;
            weights[2] = weights[6] = 0.2606106964029354623187429;
            weights[1] = weights[7] = 0.1806481606948574040584720;
            weights[0] = weights[8] = 0.0812743883615744119718922;

        } return;

        case 10:
        {
            nodes[4] = -( nodes[5] = 0.1488743389816312108848260 );
            nodes[3] = -( nodes[6] = 0.4333953941292471907992659 );
            nodes[2] = -( nodes[7] = 0.6794095682990244062343274 );
            nodes[1] = -( nodes[8] = 0.8650633666889845107320967 );
            nodes[0] = -( nodes[9] = 0.9739065285171717200779640 );

            if ( weights == nullptr ) {  return;  }

            weights[4] = weights[5] = 0.2955242247147528701738930;
            weights[3] = weights[6] = 0.2692667193099963550912269;
            weights[2] = weights[7] = 0.2190863625159820439955349;
            weights[1] = weights[8] = 0.1494513491505805931457763;
            weights[0] = weights[9] = 0.0666713443086881375935688;

        } return;

        case 12:
        {
            nodes[ 5] = -( nodes[ 6] = 0.1252334085114689154724414 );
            nodes[ 4] = -( nodes[ 7] = 0.3678314989981801937526915 );
            nodes[ 3] = -( nodes[ 8] = 0.5873179542866174472967024 );
            nodes[ 2] = -( nodes[ 9] = 0.7699026741943046870368938 );
            nodes[ 1] = -( nodes[10] = 0.9041172563704748566784659 );
            nodes[ 0] = -( nodes[11] = 0.9815606342467192506905491 );

            if ( weights == nullptr ) {  return;  }

            weights[ 5] = weights[ 6] = 0.2491470458134027850005624;
            weights[ 4] = weights[ 7] = 0.2334925365383548087608499;
            weights[ 3] = weights[ 8] = 0.2031674267230659217490645;
            weights[ 2] = weights[ 9] = 0.1600783285433462263346525;
            weights[ 1] = weights[10] = 0.1069393259953184309602547;
            weights[ 0] = weights[11] = 0.0471753363865118271946160;

        } return;

        case 14:
        {
            nodes[ 6] = -( nodes[ 7] = 0.1080549487073436620662447 );
            nodes[ 5] = -( nodes[ 8] = 0.3191123689278897604356718 );
            nodes[ 4] = -( nodes[ 9] = 0.5152486363581540919652907 );
            nodes[ 3] = -( nodes[10] = 0.6872929048116854701480198 );
            nodes[ 2] = -( nodes[11] = 0.8272013150697649931897947 );
            nodes[ 1] = -( nodes[12] = 0.9284348836635735173363911 );
            nodes[ 0] = -( nodes[13] = 0.9862838086968123388415973 );

            if ( weights == nullptr ) {  return;  }

            weights[ 6] = weights[ 7] = 0.2152638534631577901958764;
            weights[ 5] = weights[ 8] = 0.2051984637212956039659241;
            weights[ 4] = weights[ 9] = 0.1855383974779378137417166;
            weights[ 3] = weights[10] = 0.1572031671581935345696019;
            weights[ 2] = weights[11] = 0.1215185706879031846894148;
            weights[ 1] = weights[12] = 0.0801580871597602098056333;
            weights[ 0] = weights[13] = 0.0351194603317518630318329;

        } return;

        case 16:
        {
            nodes[ 7] = -( nodes[ 8] = 0.0950125098376374401853193 );
            nodes[ 6] = -( nodes[ 9] = 0.2816035507792589132304605 );
            nodes[ 5] = -( nodes[10] = 0.4580167776572273863424194 );
            nodes[ 4] = -( nodes[11] = 0.6178762444026437484466718 );
            nodes[ 3] = -( nodes[12] = 0.7554044083550030338951012 );
            nodes[ 2] = -( nodes[13] = 0.8656312023878317438804679 );
            nodes[ 1] = -( nodes[14] = 0.9445750230732325760779884 );
            nodes[ 0] = -( nodes[15] = 0.9894009349916499325961542 );

            if ( weights == nullptr ) {  return;  }

            weights[ 7] = weights[ 8] = 0.1894506104550684962853967;
            weights[ 6] = weights[ 9] = 0.1826034150449235888667637;
            weights[ 5] = weights[10] = 0.1691565193950025381893121;
            weights[ 4] = weights[11] = 0.1495959888165767320815017;
            weights[ 3] = weights[12] = 0.1246289712555338720524763;
            weights[ 2] = weights[13] = 0.0951585116824927848099251;
            weights[ 1] = weights[14] = 0.0622535239386478928628438;
            weights[ 0] = weights[15] = 0.0271524594117540948517806;

        } return;

        case 32:
        {
            nodes[15] = -( nodes[16] = 0.0483076656877383162348126 );
            nodes[14] = -( nodes[17] = 0.1444719615827964934851864 );
            nodes[13] = -( nodes[18] = 0.2392873622521370745446032 );
            nodes[12] = -( nodes[19] = 0.3318686022821276497799168 );
            nodes[11] = -( nodes[20] = 0.4213512761306353453641194 );
            nodes[10] = -( nodes[21] = 0.5068999089322293900237475 );
            nodes[ 9] = -( nodes[22] = 0.5877157572407623290407455 );
            nodes[ 8] = -( nodes[23] = 0.6630442669302152009751152 );
            nodes[ 7] = -( nodes[24] = 0.7321821187402896803874267 );
            nodes[ 6] = -( nodes[25] = 0.7944837959679424069630973 );
            nodes[ 5] = -( nodes[26] = 0.8493676137325699701336930 );
            nodes[ 4] = -( nodes[27] = 0.8963211557660521239653072 );
            nodes[ 3] = -( nodes[28] = 0.9349060759377396891709191 );
            nodes[ 2] = -( nodes[29] = 0.9647622555875064307738119 );
            nodes[ 1] = -( nodes[30] = 0.9856115115452683354001750 );
            nodes[ 0] = -( nodes[31] = 0.9972638618494815635449811 );

            if ( weights == nullptr ) {  return;  }

            weights[15] = weights[16] = 0.0965400885147278005667648;
            weights[14] = weights[17] = 0.0956387200792748594190820;
            weights[13] = weights[18] = 0.0938443990808045656391802;
            weights[12] = weights[19] = 0.0911738786957638847128686;
            weights[11] = weights[20] = 0.0876520930044038111427715;
            weights[10] = weights[21] = 0.0833119242269467552221991;
            weights[ 9] = weights[22] = 0.0781938957870703064717409;
            weights[ 8] = weights[23] = 0.0723457941088485062253994;
            weights[ 7] = weights[24] = 0.0658222227763618468376501;
            weights[ 6] = weights[25] = 0.0586840934785355471452836;
            weights[ 5] = weights[26] = 0.0509980592623761761961632;
            weights[ 4] = weights[27] = 0.0428358980222266806568786;
            weights[ 3] = weights[28] = 0.0342738629130214331026877;
            weights[ 2] = weights[29] = 0.0253920653092620594557526;
            weights[ 1] = weights[30] = 0.0162743947309056706051706;
            weights[ 0] = weights[31] = 0.0070186100094700966004071;

        } return;

        case 64:
        {
            nodes[31] = -( nodes[32] = 0.0243502926634244325089558 );
            nodes[30] = -( nodes[33] = 0.0729931217877990394495429 );
            nodes[29] = -( nodes[34] = 0.1214628192961205544703765 );
            nodes[28] = -( nodes[35] = 0.1696444204239928180373136 );
            nodes[27] = -( nodes[36] = 0.2174236437400070841496487 );
            nodes[26] = -( nodes[37] = 0.2646871622087674163739642 );
            nodes[25] = -( nodes[38] = 0.3113228719902109561575127 );
            nodes[24] = -( nodes[39] = 0.3572201583376681159504426 );
            nodes[23] = -( nodes[40] = 0.4022701579639916036957668 );
            nodes[22] = -( nodes[41] = 0.4463660172534640879849477 );
            nodes[21] = -( nodes[42] = 0.4894031457070529574785263 );
            nodes[20] = -( nodes[43] = 0.5312794640198945456580139 );
            nodes[19] = -( nodes[44] = 0.5718956462026340342838781 );
            nodes[18] = -( nodes[45] = 0.6111553551723932502488530 );
            nodes[17] = -( nodes[46] = 0.6489654712546573398577612 );
            nodes[16] = -( nodes[47] = 0.6852363130542332425635584 );
            nodes[15] = -( nodes[48] = 0.7198818501716108268489402 );
            nodes[14] = -( nodes[49] = 0.7528199072605318966118638 );
            nodes[13] = -( nodes[50] = 0.7839723589433414076102205 );
            nodes[12] = -( nodes[51] = 0.8132653151227975597419233 );
            nodes[11] = -( nodes[52] = 0.8406292962525803627516915 );
            nodes[10] = -( nodes[53] = 0.8659993981540928197607834 );
            nodes[ 9] = -( nodes[54] = 0.8893154459951141058534040 );
            nodes[ 8] = -( nodes[55] = 0.9105221370785028057563807 );
            nodes[ 7] = -( nodes[56] = 0.9295691721319395758214902 );
            nodes[ 6] = -( nodes[57] = 0.9464113748584028160624815 );
            nodes[ 5] = -( nodes[58] = 0.9610087996520537189186141 );
            nodes[ 4] = -( nodes[59] = 0.9733268277899109637418535 );
            nodes[ 3] = -( nodes[60] = 0.9833362538846259569312993 );
            nodes[ 2] = -( nodes[61] = 0.9910133714767443207393824 );
            nodes[ 1] = -( nodes[62] = 0.9963401167719552793469245 );
            nodes[ 0] = -( nodes[63] = 0.9993050417357721394569056 );

            if ( weights == nullptr ) {  return;  }

            weights[31] = weights[32] = 0.0486909570091397203833654;
            weights[30] = weights[33] = 0.0485754674415034269347991;
            weights[29] = weights[34] = 0.0483447622348029571697695;
            weights[28] = weights[35] = 0.0479993885964583077281262;
            weights[27] = weights[36] = 0.0475401657148303086622822;
            weights[26] = weights[37] = 0.0469681828162100173253263;
            weights[25] = weights[38] = 0.0462847965813144172959532;
            weights[24] = weights[39] = 0.0454916279274181444797710;
            weights[23] = weights[40] = 0.0445905581637565630601347;
            weights[22] = weights[41] = 0.0435837245293234533768279;
            weights[21] = weights[42] = 0.0424735151236535890073398;
            weights[20] = weights[43] = 0.0412625632426235286101563;
            weights[19] = weights[44] = 0.0399537411327203413866569;
            weights[18] = weights[45] = 0.0385501531786156291289625;
            weights[17] = weights[46] = 0.0370551285402400460404151;
            weights[16] = weights[47] = 0.0354722132568823838106931;
            weights[15] = weights[48] = 0.0338051618371416093915655;
            weights[14] = weights[49] = 0.0320579283548515535854675;
            weights[13] = weights[50] = 0.0302346570724024788679741;
            weights[12] = weights[51] = 0.0283396726142594832275113;
            weights[11] = weights[52] = 0.0263774697150546586716918;
            weights[10] = weights[53] = 0.0243527025687108733381776;
            weights[ 9] = weights[54] = 0.0222701738083832541592983;
            weights[ 8] = weights[55] = 0.0201348231535302093723403;
            weights[ 7] = weights[56] = 0.0179517157756973430850453;
            weights[ 6] = weights[57] = 0.0157260304760247193219660;
            weights[ 5] = weights[58] = 0.0134630478967186425980608;
            weights[ 4] = weights[59] = 0.0111681394601311288185905;
            weights[ 3] = weights[60] = 0.0088467598263639477230309;
            weights[ 2] = weights[61] = 0.0065044579689783628561174;
            weights[ 1] = weights[62] = 0.0041470332605624676352875;
            weights[ 0] = weights[63] = 0.0017832807216964329472961;

        } return;

        case 128:
        {
            nodes[ 63] = -( nodes[ 64] = 0.0122236989606157641980521 );
            nodes[ 62] = -( nodes[ 65] = 0.0366637909687334933302153 );
            nodes[ 61] = -( nodes[ 66] = 0.0610819696041395681037870 );
            nodes[ 60] = -( nodes[ 67] = 0.0854636405045154986364980 );
            nodes[ 59] = -( nodes[ 68] = 0.1097942311276437466729747 );
            nodes[ 58] = -( nodes[ 69] = 0.1340591994611877851175753 );
            nodes[ 57] = -( nodes[ 70] = 0.1582440427142249339974755 );
            nodes[ 56] = -( nodes[ 71] = 0.1823343059853371824103826 );
            nodes[ 55] = -( nodes[ 72] = 0.2063155909020792171540580 );
            nodes[ 54] = -( nodes[ 73] = 0.2301735642266599864109866 );
            nodes[ 53] = -( nodes[ 74] = 0.2538939664226943208556180 );
            nodes[ 52] = -( nodes[ 75] = 0.2774626201779044028062316 );
            nodes[ 51] = -( nodes[ 76] = 0.3008654388776772026671541 );
            nodes[ 50] = -( nodes[ 77] = 0.3240884350244133751832523 );
            nodes[ 49] = -( nodes[ 78] = 0.3471177285976355084261628 );
            nodes[ 48] = -( nodes[ 79] = 0.3699395553498590266165917 );
            nodes[ 47] = -( nodes[ 80] = 0.3925402750332674427356482 );
            nodes[ 46] = -( nodes[ 81] = 0.4149063795522750154922739 );
            nodes[ 45] = -( nodes[ 82] = 0.4370245010371041629370429 );
            nodes[ 44] = -( nodes[ 83] = 0.4588814198335521954490891 );
            nodes[ 43] = -( nodes[ 84] = 0.4804640724041720258582757 );
            nodes[ 42] = -( nodes[ 85] = 0.5017595591361444642896063 );
            nodes[ 41] = -( nodes[ 86] = 0.5227551520511754784539479 );
            nodes[ 40] = -( nodes[ 87] = 0.5434383024128103634441936 );
            nodes[ 39] = -( nodes[ 88] = 0.5637966482266180839144308 );
            nodes[ 38] = -( nodes[ 89] = 0.5838180216287630895500389 );
            nodes[ 37] = -( nodes[ 90] = 0.6034904561585486242035732 );
            nodes[ 36] = -( nodes[ 91] = 0.6228021939105849107615396 );
            nodes[ 35] = -( nodes[ 92] = 0.6417416925623075571535249 );
            nodes[ 34] = -( nodes[ 93] = 0.6602976322726460521059468 );
            nodes[ 33] = -( nodes[ 94] = 0.6784589224477192593677557 );
            nodes[ 32] = -( nodes[ 95] = 0.6962147083695143323850866 );
            nodes[ 31] = -( nodes[ 96] = 0.7135543776835874133438599 );
            nodes[ 30] = -( nodes[ 97] = 0.7304675667419088064717369 );
            nodes[ 29] = -( nodes[ 98] = 0.7469441667970619811698824 );
            nodes[ 28] = -( nodes[ 99] = 0.7629743300440947227797691 );
            nodes[ 27] = -( nodes[100] = 0.7785484755064119668504941 );
            nodes[ 26] = -( nodes[101] = 0.7936572947621932902433329 );
            nodes[ 25] = -( nodes[102] = 0.8082917575079136601196422 );
            nodes[ 24] = -( nodes[103] = 0.8224431169556438424645942 );
            nodes[ 23] = -( nodes[104] = 0.8361029150609068471168753 );
            nodes[ 22] = -( nodes[105] = 0.8492629875779689691636001 );
            nodes[ 21] = -( nodes[106] = 0.8619154689395484605906323 );
            nodes[ 20] = -( nodes[107] = 0.8740527969580317986954180 );
            nodes[ 19] = -( nodes[108] = 0.8856677173453972174082924 );
            nodes[ 18] = -( nodes[109] = 0.8967532880491581843864474 );
            nodes[ 17] = -( nodes[110] = 0.9073028834017568139214859 );
            nodes[ 16] = -( nodes[111] = 0.9173101980809605370364836 );
            nodes[ 15] = -( nodes[112] = 0.9267692508789478433346245 );
            nodes[ 14] = -( nodes[113] = 0.9356743882779163757831268 );
            nodes[ 13] = -( nodes[114] = 0.9440202878302201821211114 );
            nodes[ 12] = -( nodes[115] = 0.9518019613412643862177963 );
            nodes[ 11] = -( nodes[116] = 0.9590147578536999280989185 );
            nodes[ 10] = -( nodes[117] = 0.9656543664319652686458290 );
            nodes[  9] = -( nodes[118] = 0.9717168187471365809043384 );
            nodes[  8] = -( nodes[119] = 0.9771984914639073871653744 );
            nodes[  7] = -( nodes[120] = 0.9820961084357185360247656 );
            nodes[  6] = -( nodes[121] = 0.9864067427245862088712355 );
            nodes[  5] = -( nodes[122] = 0.9901278184917343833379303 );
            nodes[  4] = -( nodes[123] = 0.9932571129002129353034372 );
            nodes[  3] = -( nodes[124] = 0.9957927585349811868641612 );
            nodes[  2] = -( nodes[125] = 0.9977332486255140198821574 );
            nodes[  1] = -( nodes[126] = 0.9990774599773758950119878 );
            nodes[  0] = -( nodes[127] = 0.9998248879471319144736081 );

            if ( weights == nullptr ) {  return;  }

            weights[ 63] = weights[ 64] = 0.0244461801962625182113259;
            weights[ 62] = weights[ 65] = 0.0244315690978500450548486;
            weights[ 61] = weights[ 66] = 0.0244023556338495820932980;
            weights[ 60] = weights[ 67] = 0.0243585572646906258532685;
            weights[ 59] = weights[ 68] = 0.0243002001679718653234426;
            weights[ 58] = weights[ 69] = 0.0242273192228152481200933;
            weights[ 57] = weights[ 70] = 0.0241399579890192849977167;
            weights[ 56] = weights[ 71] = 0.0240381686810240526375873;
            weights[ 55] = weights[ 72] = 0.0239220121367034556724504;
            weights[ 54] = weights[ 73] = 0.0237915577810034006387807;
            weights[ 53] = weights[ 74] = 0.0236468835844476151436514;
            weights[ 52] = weights[ 75] = 0.0234880760165359131530253;
            weights[ 51] = weights[ 76] = 0.0233152299940627601224157;
            weights[ 50] = weights[ 77] = 0.0231284488243870278792979;
            weights[ 49] = weights[ 78] = 0.0229278441436868469204110;
            weights[ 48] = weights[ 79] = 0.0227135358502364613097126;
            weights[ 47] = weights[ 80] = 0.0224856520327449668718246;
            weights[ 46] = weights[ 81] = 0.0222443288937997651046291;
            weights[ 45] = weights[ 82] = 0.0219897106684604914341221;
            weights[ 44] = weights[ 83] = 0.0217219495380520753752610;
            weights[ 43] = weights[ 84] = 0.0214412055392084601371119;
            weights[ 42] = weights[ 85] = 0.0211476464682213485370195;
            weights[ 41] = weights[ 86] = 0.0208414477807511491135839;
            weights[ 40] = weights[ 87] = 0.0205227924869600694322850;
            weights[ 39] = weights[ 88] = 0.0201918710421300411806732;
            weights[ 38] = weights[ 89] = 0.0198488812328308622199444;
            weights[ 37] = weights[ 90] = 0.0194940280587066028230219;
            weights[ 36] = weights[ 91] = 0.0191275236099509454865185;
            weights[ 35] = weights[ 92] = 0.0187495869405447086509195;
            weights[ 34] = weights[ 93] = 0.0183604439373313432212893;
            weights[ 33] = weights[ 94] = 0.0179603271850086859401969;
            weights[ 32] = weights[ 95] = 0.0175494758271177046487069;
            weights[ 31] = weights[ 96] = 0.0171281354231113768306810;
            weights[ 30] = weights[ 97] = 0.0166965578015892045890915;
            weights[ 29] = weights[ 98] = 0.0162550009097851870516575;
            weights[ 28] = weights[ 99] = 0.0158037286593993468589656;
            weights[ 27] = weights[100] = 0.0153430107688651440859909;
            weights[ 26] = weights[101] = 0.0148731226021473142523855;
            weights[ 25] = weights[102] = 0.0143943450041668461768239;
            weights[ 24] = weights[103] = 0.0139069641329519852442880;
            weights[ 23] = weights[104] = 0.0134112712886163323144890;
            weights[ 22] = weights[105] = 0.0129075627392673472204428;
            weights[ 21] = weights[106] = 0.0123961395439509229688217;
            weights[ 20] = weights[107] = 0.0118773073727402795758911;
            weights[ 19] = weights[108] = 0.0113513763240804166932817;
            weights[ 18] = weights[109] = 0.0108186607395030762476596;
            weights[ 17] = weights[110] = 0.0102794790158321571332153;
            weights[ 16] = weights[111] = 0.0097341534150068058635483;
            weights[ 15] = weights[112] = 0.0091830098716608743344787;
            weights[ 14] = weights[113] = 0.0086263777986167497049788;
            weights[ 13] = weights[114] = 0.0080645898904860579729286;
            weights[ 12] = weights[115] = 0.0074979819256347286876720;
            weights[ 11] = weights[116] = 0.0069268925668988135634267;
            weights[ 10] = weights[117] = 0.0063516631617071887872143;
            weights[  9] = weights[118] = 0.0057726375428656985893346;
            weights[  8] = weights[119] = 0.0051901618326763302050708;
            weights[  7] = weights[120] = 0.0046045842567029551182905;
            weights[  6] = weights[121] = 0.0040162549837386423131943;
            weights[  5] = weights[122] = 0.0034255260409102157743378;
            weights[  4] = weights[123] = 0.0028327514714579910952857;
            weights[  3] = weights[124] = 0.0022382884309626187436221;
            weights[  2] = weights[125] = 0.0016425030186690295387909;
            weights[  1] = weights[126] = 0.0010458126793403487793129;
            weights[  0] = weights[127] = 0.0004493809602920903763943;

        } return;

        case 256:
        {
            nodes[127] = -( nodes[128] = 0.0061239123751895295011702 );
            nodes[126] = -( nodes[129] = 0.0183708184788136651179263 );
            nodes[125] = -( nodes[130] = 0.0306149687799790293662786 );
            nodes[124] = -( nodes[131] = 0.0428545265363790983812423 );
            nodes[123] = -( nodes[132] = 0.0550876556946339841045614 );
            nodes[122] = -( nodes[133] = 0.0673125211657164002422903 );
            nodes[121] = -( nodes[134] = 0.0795272891002329659032271 );
            nodes[120] = -( nodes[135] = 0.0917301271635195520311456 );
            nodes[119] = -( nodes[136] = 0.1039192048105094036391969 );
            nodes[118] = -( nodes[137] = 0.1160926935603328049407349 );
            nodes[117] = -( nodes[138] = 0.1282487672706070947420496 );
            nodes[116] = -( nodes[139] = 0.1403856024113758859130249 );
            nodes[115] = -( nodes[140] = 0.1525013783386563953746068 );
            nodes[114] = -( nodes[141] = 0.1645942775675538498292845 );
            nodes[113] = -( nodes[142] = 0.1766624860449019974037218 );
            nodes[112] = -( nodes[143] = 0.1887041934213888264615036 );
            nodes[111] = -( nodes[144] = 0.2007175933231266700680007 );
            nodes[110] = -( nodes[145] = 0.2127008836226259579370402 );
            nodes[109] = -( nodes[146] = 0.2246522667091319671478783 );
            nodes[108] = -( nodes[147] = 0.2365699497582840184775084 );
            nodes[107] = -( nodes[148] = 0.2484521450010566668332427 );
            nodes[106] = -( nodes[149] = 0.2602970699919425419785609 );
            nodes[105] = -( nodes[150] = 0.2721029478763366095052447 );
            nodes[104] = -( nodes[151] = 0.2838680076570817417997658 );
            nodes[103] = -( nodes[152] = 0.2955904844601356145637868 );
            nodes[102] = -( nodes[153] = 0.3072686197993190762586103 );
            nodes[101] = -( nodes[154] = 0.3189006618401062756316834 );
            nodes[100] = -( nodes[155] = 0.3304848656624169762291870 );
            nodes[ 99] = -( nodes[156] = 0.3420194935223716364807297 );
            nodes[ 98] = -( nodes[157] = 0.3535028151129699895377902 );
            nodes[ 97] = -( nodes[158] = 0.3649331078236540185334649 );
            nodes[ 96] = -( nodes[159] = 0.3763086569987163902830557 );
            nodes[ 95] = -( nodes[160] = 0.3876277561945155836379846 );
            nodes[ 94] = -( nodes[161] = 0.3988887074354591277134632 );
            nodes[ 93] = -( nodes[162] = 0.4100898214687165500064336 );
            nodes[ 92] = -( nodes[163] = 0.4212294180176238249768124 );
            nodes[ 91] = -( nodes[164] = 0.4323058260337413099534411 );
            nodes[ 90] = -( nodes[165] = 0.4433173839475273572169258 );
            nodes[ 89] = -( nodes[166] = 0.4542624399175899987744552 );
            nodes[ 88] = -( nodes[167] = 0.4651393520784793136455705 );
            nodes[ 87] = -( nodes[168] = 0.4759464887869833063907375 );
            nodes[ 86] = -( nodes[169] = 0.4866822288668903501036214 );
            nodes[ 85] = -( nodes[170] = 0.4973449618521814771195124 );
            nodes[ 84] = -( nodes[171] = 0.5079330882286160362319249 );
            nodes[ 83] = -( nodes[172] = 0.5184450196736744762216617 );
            nodes[ 82] = -( nodes[173] = 0.5288791792948222619514764 );
            nodes[ 81] = -( nodes[174] = 0.5392340018660591811279362 );
            nodes[ 80] = -( nodes[175] = 0.5495079340627185570424269 );
            nodes[ 79] = -( nodes[176] = 0.5596994346944811451369074 );
            nodes[ 78] = -( nodes[177] = 0.5698069749365687590576675 );
            nodes[ 77] = -( nodes[178] = 0.5798290385590829449218317 );
            nodes[ 76] = -( nodes[179] = 0.5897641221544543007857861 );
            nodes[ 75] = -( nodes[180] = 0.5996107353629683217303882 );
            nodes[ 74] = -( nodes[181] = 0.6093674010963339395223108 );
            nodes[ 73] = -( nodes[182] = 0.6190326557592612194309676 );
            nodes[ 72] = -( nodes[183] = 0.6286050494690149754322099 );
            nodes[ 71] = -( nodes[184] = 0.6380831462729113686686886 );
            nodes[ 70] = -( nodes[185] = 0.6474655243637248626170162 );
            nodes[ 69] = -( nodes[186] = 0.6567507762929732218875002 );
            nodes[ 68] = -( nodes[187] = 0.6659375091820485599064084 );
            nodes[ 67] = -( nodes[188] = 0.6750243449311627638559187 );
            nodes[ 66] = -( nodes[189] = 0.6840099204260759531248771 );
            nodes[ 65] = -( nodes[190] = 0.6928928877425769601053416 );
            nodes[ 64] = -( nodes[191] = 0.7016719143486851594060835 );
            nodes[ 63] = -( nodes[192] = 0.7103456833045433133945663 );
            nodes[ 62] = -( nodes[193] = 0.7189128934599714483726399 );
            nodes[ 61] = -( nodes[194] = 0.7273722596496521265868944 );
            nodes[ 60] = -( nodes[195] = 0.7357225128859178346203729 );
            nodes[ 59] = -( nodes[196] = 0.7439624005491115684556831 );
            nodes[ 58] = -( nodes[197] = 0.7520906865754920595875297 );
            nodes[ 57] = -( nodes[198] = 0.7601061516426554549419068 );
            nodes[ 56] = -( nodes[199] = 0.7680075933524456359758906 );
            nodes[ 55] = -( nodes[200] = 0.7757938264113257391320526 );
            nodes[ 54] = -( nodes[201] = 0.7834636828081838207506702 );
            nodes[ 53] = -( nodes[202] = 0.7910160119895459945467075 );
            nodes[ 52] = -( nodes[203] = 0.7984496810321707587825429 );
            nodes[ 51] = -( nodes[204] = 0.8057635748129986232573891 );
            nodes[ 50] = -( nodes[205] = 0.8129565961764315431364104 );
            nodes[ 49] = -( nodes[206] = 0.8200276660989170674034781 );
            nodes[ 48] = -( nodes[207] = 0.8269757238508125142890929 );
            nodes[ 47] = -( nodes[208] = 0.8337997271555048943484439 );
            nodes[ 46] = -( nodes[209] = 0.8404986523457627138950680 );
            nodes[ 45] = -( nodes[210] = 0.8470714945172962071870724 );
            nodes[ 44] = -( nodes[211] = 0.8535172676795029650730355 );
            nodes[ 43] = -( nodes[212] = 0.8598350049033763506961731 );
            nodes[ 42] = -( nodes[213] = 0.8660237584665545192975154 );
            nodes[ 41] = -( nodes[214] = 0.8720825999954882891300459 );
            nodes[ 40] = -( nodes[215] = 0.8780106206047065439864349 );
            nodes[ 39] = -( nodes[216] = 0.8838069310331582848598262 );
            nodes[ 38] = -( nodes[217] = 0.8894706617776108888286766 );
            nodes[ 37] = -( nodes[218] = 0.8950009632230845774412228 );
            nodes[ 36] = -( nodes[219] = 0.9003970057703035447716200 );
            nodes[ 35] = -( nodes[220] = 0.9056579799601446470826819 );
            nodes[ 34] = -( nodes[221] = 0.9107830965950650118909072 );
            nodes[ 33] = -( nodes[222] = 0.9157715868574903845266696 );
            nodes[ 32] = -( nodes[223] = 0.9206227024251464955050471 );
            nodes[ 31] = -( nodes[224] = 0.9253357155833162028727303 );
            nodes[ 30] = -( nodes[225] = 0.9299099193340056411802456 );
            nodes[ 29] = -( nodes[226] = 0.9343446275020030942924765 );
            nodes[ 28] = -( nodes[227] = 0.9386391748378148049819261 );
            nodes[ 27] = -( nodes[228] = 0.9427929171174624431830761 );
            nodes[ 26] = -( nodes[229] = 0.9468052312391274813720517 );
            nodes[ 25] = -( nodes[230] = 0.9506755153166282763638521 );
            nodes[ 24] = -( nodes[231] = 0.9544031887697162417644479 );
            nodes[ 23] = -( nodes[232] = 0.9579876924111781293657904 );
            nodes[ 22] = -( nodes[233] = 0.9614284885307321440064075 );
            nodes[ 21] = -( nodes[234] = 0.9647250609757064309326123 );
            nodes[ 20] = -( nodes[235] = 0.9678769152284894549090038 );
            nodes[ 19] = -( nodes[236] = 0.9708835784807430293209233 );
            nodes[ 18] = -( nodes[237] = 0.9737445997043704052660786 );
            nodes[ 17] = -( nodes[238] = 0.9764595497192341556210107 );
            nodes[ 16] = -( nodes[239] = 0.9790280212576220388242380 );
            nodes[ 15] = -( nodes[240] = 0.9814496290254644057693031 );
            nodes[ 14] = -( nodes[241] = 0.9837240097603154961666861 );
            nodes[ 13] = -( nodes[242] = 0.9858508222861259564792451 );
            nodes[ 12] = -( nodes[243] = 0.9878297475648606089164877 );
            nodes[ 11] = -( nodes[244] = 0.9896604887450652183192437 );
            nodes[ 10] = -( nodes[245] = 0.9913427712075830869221885 );
            nodes[  9] = -( nodes[246] = 0.9928763426088221171435338 );
            nodes[  8] = -( nodes[247] = 0.9942609729224096649628775 );
            nodes[  7] = -( nodes[248] = 0.9954964544810963565926471 );
            nodes[  6] = -( nodes[249] = 0.9965826020233815404305044 );
            nodes[  5] = -( nodes[250] = 0.9975192527567208275634088 );
            nodes[  4] = -( nodes[251] = 0.9983062664730064440555005 );
            nodes[  3] = -( nodes[252] = 0.9989435258434088565550263 );
            nodes[  2] = -( nodes[253] = 0.9994309374662614082408542 );
            nodes[  1] = -( nodes[254] = 0.9997684374092631861048786 );
            nodes[  0] = -( nodes[255] = 0.9999560500189922307348012 );

            if ( weights == nullptr ) {  return;  }

            weights[127] = weights[128] = 0.0122476716402897559040703;
            weights[126] = weights[129] = 0.0122458343697479201424639;
            weights[125] = weights[130] = 0.0122421601042728007697281;
            weights[124] = weights[131] = 0.0122366493950401581092426;
            weights[123] = weights[132] = 0.0122293030687102789041463;
            weights[122] = weights[133] = 0.0122201222273039691917087;
            weights[121] = weights[134] = 0.0122091082480372404075141;
            weights[120] = weights[135] = 0.0121962627831147135181810;
            weights[119] = weights[136] = 0.0121815877594817721740476;
            weights[118] = weights[137] = 0.0121650853785355020613073;
            weights[117] = weights[138] = 0.0121467581157944598155598;
            weights[116] = weights[139] = 0.0121266087205273210347185;
            weights[115] = weights[140] = 0.0121046402153404630977578;
            weights[114] = weights[141] = 0.0120808558957245446559752;
            weights[113] = weights[142] = 0.0120552593295601498143471;
            weights[112] = weights[143] = 0.0120278543565825711612675;
            weights[111] = weights[144] = 0.0119986450878058119345367;
            weights[110] = weights[145] = 0.0119676359049058937290073;
            weights[109] = weights[146] = 0.0119348314595635622558732;
            weights[108] = weights[147] = 0.0119002366727664897542872;
            weights[107] = weights[148] = 0.0118638567340710787319046;
            weights[106] = weights[149] = 0.0118256971008239777711607;
            weights[105] = weights[150] = 0.0117857634973434261816901;
            weights[104] = weights[151] = 0.0117440619140605503053767;
            weights[103] = weights[152] = 0.0117005986066207402881898;
            weights[102] = weights[153] = 0.0116553800949452421212989;
            weights[101] = weights[154] = 0.0116084131622531057220847;
            weights[100] = weights[155] = 0.0115597048540436357726687;
            weights[ 99] = weights[156] = 0.0115092624770394979585864;
            weights[ 98] = weights[157] = 0.0114570935980906391523344;
            weights[ 97] = weights[158] = 0.0114032060430391859648471;
            weights[ 96] = weights[159] = 0.0113476078955454919416257;
            weights[ 95] = weights[160] = 0.0112903074958755095083676;
            weights[ 94] = weights[161] = 0.0112313134396496685726568;
            weights[ 93] = weights[162] = 0.0111706345765534494627109;
            weights[ 92] = weights[163] = 0.0111082800090098436304608;
            weights[ 91] = weights[164] = 0.0110442590908139012635176;
            weights[ 90] = weights[165] = 0.0109785814257295706379882;
            weights[ 89] = weights[166] = 0.0109112568660490397007968;
            weights[ 88] = weights[167] = 0.0108422955111147959952935;
            weights[ 87] = weights[168] = 0.0107717077058046266366536;
            weights[ 86] = weights[169] = 0.0106995040389797856030482;
            weights[ 85] = weights[170] = 0.0106256953418965611339617;
            weights[ 84] = weights[171] = 0.0105502926865814815175336;
            weights[ 83] = weights[172] = 0.0104733073841704030035696;
            weights[ 82] = weights[173] = 0.0103947509832117289971017;
            weights[ 81] = weights[174] = 0.0103146352679340150682607;
            weights[ 80] = weights[175] = 0.0102329722564782196569549;
            weights[ 79] = weights[176] = 0.0101497741990948656546341;
            weights[ 78] = weights[177] = 0.0100650535763063833094610;
            weights[ 77] = weights[178] = 0.0099788230970349101247339;
            weights[ 76] = weights[179] = 0.0098910956966958286026307;
            weights[ 75] = weights[180] = 0.0098018845352573278254988;
            weights[ 74] = weights[181] = 0.0097112029952662799642497;
            weights[ 73] = weights[182] = 0.0096190646798407278571622;
            weights[ 72] = weights[183] = 0.0095254834106292848118297;
            weights[ 71] = weights[184] = 0.0094304732257377527473528;
            weights[ 70] = weights[185] = 0.0093340483776232697124660;
            weights[ 69] = weights[186] = 0.0092362233309563026873787;
            weights[ 68] = weights[187] = 0.0091370127604508064020005;
            weights[ 67] = weights[188] = 0.0090364315486628736802278;
            weights[ 66] = weights[189] = 0.0089344947837582075484084;
            weights[ 65] = weights[190] = 0.0088312177572487500253183;
            weights[ 64] = weights[191] = 0.0087266159616988071403366;
            weights[ 63] = weights[192] = 0.0086207050884010143053688;
            weights[ 62] = weights[193] = 0.0085135010250224906938384;
            weights[ 61] = weights[194] = 0.0084050198532215357561803;
            weights[ 60] = weights[195] = 0.0082952778462352254251714;
            weights[ 59] = weights[196] = 0.0081842914664382699356198;
            weights[ 58] = weights[197] = 0.0080720773628734995009470;
            weights[ 57] = weights[198] = 0.0079586523687543483536132;
            weights[ 56] = weights[199] = 0.0078440334989397118668103;
            weights[ 55] = weights[200] = 0.0077282379473815556311102;
            weights[ 54] = weights[201] = 0.0076112830845456594616187;
            weights[ 53] = weights[202] = 0.0074931864548058833585998;
            weights[ 52] = weights[203] = 0.0073739657738123464375724;
            weights[ 51] = weights[204] = 0.0072536389258339137838291;
            weights[ 50] = weights[205] = 0.0071322239610753900716724;
            weights[ 49] = weights[206] = 0.0070097390929698226212344;
            weights[ 48] = weights[207] = 0.0068862026954463203467133;
            weights[ 47] = weights[208] = 0.0067616333001737987809279;
            weights[ 46] = weights[209] = 0.0066360495937810650445900;
            weights[ 45] = weights[210] = 0.0065094704150536602678099;
            weights[ 44] = weights[211] = 0.0063819147521078805703752;
            weights[ 43] = weights[212] = 0.0062534017395424012720636;
            weights[ 42] = weights[213] = 0.0061239506555679325423891;
            weights[ 41] = weights[214] = 0.0059935809191153382211277;
            weights[ 40] = weights[215] = 0.0058623120869226530606616;
            weights[ 39] = weights[216] = 0.0057301638506014371773844;
            weights[ 38] = weights[217] = 0.0055971560336829100775514;
            weights[ 37] = weights[218] = 0.0054633085886443102775705;
            weights[ 36] = weights[219] = 0.0053286415939159303170811;
            weights[ 35] = weights[220] = 0.0051931752508692809303288;
            weights[ 34] = weights[221] = 0.0050569298807868423875578;
            weights[ 33] = weights[222] = 0.0049199259218138656695588;
            weights[ 32] = weights[223] = 0.0047821839258926913729317;
            weights[ 31] = weights[224] = 0.0046437245556800603139791;
            weights[ 30] = weights[225] = 0.0045045685814478970686418;
            weights[ 29] = weights[226] = 0.0043647368779680566815684;
            weights[ 28] = weights[227] = 0.0042242504213815362723565;
            weights[ 27] = weights[228] = 0.0040831302860526684085998;
            weights[ 26] = weights[229] = 0.0039413976414088336277290;
            weights[ 25] = weights[230] = 0.0037990737487662579981170;
            weights[ 24] = weights[231] = 0.0036561799581425021693892;
            weights[ 23] = weights[232] = 0.0035127377050563073309711;
            weights[ 22] = weights[233] = 0.0033687685073155510120191;
            weights[ 21] = weights[234] = 0.0032242939617941981570107;
            weights[ 20] = weights[235] = 0.0030793357411993375832054;
            weights[ 19] = weights[236] = 0.0029339155908297166460123;
            weights[ 18] = weights[237] = 0.0027880553253277068805748;
            weights[ 17] = weights[238] = 0.0026417768254274905641208;
            weights[ 16] = weights[239] = 0.0024951020347037068508395;
            weights[ 15] = weights[240] = 0.0023480529563273120170065;
            weights[ 14] = weights[241] = 0.0022006516498399104996849;
            weights[ 13] = weights[242] = 0.0020529202279661431745488;
            weights[ 12] = weights[243] = 0.0019048808534997184044191;
            weights[ 11] = weights[244] = 0.0017565557363307299936069;
            weights[ 10] = weights[245] = 0.0016079671307493272424499;
            weights[  9] = weights[246] = 0.0014591373333107332010884;
            weights[  8] = weights[247] = 0.0013100886819025044578317;
            weights[  7] = weights[248] = 0.0011608435575677247239706;
            weights[  6] = weights[249] = 0.0010114243932084404526058;
            weights[  5] = weights[250] = 0.0008618537014200890378141;
            weights[  4] = weights[251] = 0.0007121541634733206669090;
            weights[  3] = weights[252] = 0.0005623489540314098028152;
            weights[  2] = weights[253] = 0.0004124632544261763284322;
            weights[  1] = weights[254] = 0.0002625349442964459062875;
            weights[  0] = weights[255] = 0.0001127890178222721755125;

        } return;

        default:
            throw std::invalid_argument( "Gauss-Legendre quadrature of order " + std::to_string(n)
                                         + " not found in table." );
    }
}


//------------------------------------------------------------------------------------------------------------
//! \brief  Routine used to obtain precomputed Gauss-Kronrod quadrature rules for integration across the
//!         interval \f$ [-1,1] \f$.
//!
//! This routine only provides precomputed rules with \f$ n = 15, 21, 31, 41 \f$ computed with high precision
//! libraries.
//!
//! \attention  The size of the quadrature rule \f$ n \f$ corresponds to the Kronrod quadrature rule, which
//!             contains \f$ 2k + 1 \f$ nodes, where \f$ k \f$ is the number of nodes in the embedded Gauss
//!             quadrature rule.
//!
//! \param[in]      n           Size of quadrature rule to compute.
//! \param[out]     nodes       Upon return contains the set of Kronrod quadrature nodes. The gauss nodes are
//!                             stored at the odd indices.
//! \param[out]     G_weights   Upon return contains the set of quadrature weights for the Gauss nodes.
//!                             The weight for the Gauss node stored at index \f$ i \f$ in \c nodes is stored
//!                             at the index \f$ i/2 \f$.
//! \param[out]     K_weights   Upon return contains the set of quadrature weights for the Kronrod nodes.
//------------------------------------------------------------------------------------------------------------
void Quadrule::GKTable (

    const int64_t n,
    double * const nodes,
    double * const G_weights,
    double * const K_weights
) {

    switch ( n ) {

        case 15:
        {
            nodes[ 0]     = -9.914553711208126392068546975263285e-01;
            nodes[ 1]     = -9.491079123427585245261896840478513e-01;
            nodes[ 2]     = -8.648644233597690727897127886409262e-01;
            nodes[ 3]     = -7.415311855993944398638647732807884e-01;
            nodes[ 4]     = -5.860872354676911302941448382587296e-01;
            nodes[ 5]     = -4.058451513773971669066064120769615e-01;
            nodes[ 6]     = -2.077849550078984676006894037732449e-01;
            nodes[ 7]     =  0.0;
            nodes[ 8]     =  2.077849550078984676006894037732449e-01;
            nodes[ 9]     =  4.058451513773971669066064120769615e-01;
            nodes[10]     =  5.860872354676911302941448382587296e-01;
            nodes[11]     =  7.415311855993944398638647732807884e-01;
            nodes[12]     =  8.648644233597690727897127886409262e-01;
            nodes[13]     =  9.491079123427585245261896840478513e-01;
            nodes[14]     =  9.914553711208126392068546975263285e-01;

            G_weights[ 0] =  1.294849661688696932706114326790820e-01;
            G_weights[ 1] =  2.797053914892766679014677714237796e-01;
            G_weights[ 2] =  3.818300505051189449503697754889751e-01;
            G_weights[ 3] =  4.179591836734693877551020408163265e-01;
            G_weights[ 4] =  3.818300505051189449503697754889751e-01;
            G_weights[ 5] =  2.797053914892766679014677714237796e-01;
            G_weights[ 6] =  1.294849661688696932706114326790820e-01;

            K_weights[ 0] =  2.293532201052922496373200805896959e-02;
            K_weights[ 1] =  6.309209262997855329070066318920429e-02;
            K_weights[ 2] =  1.047900103222501838398763225415180e-01;
            K_weights[ 3] =  1.406532597155259187451895905102379e-01;
            K_weights[ 4] =  1.690047266392679028265834265985503e-01;
            K_weights[ 5] =  1.903505780647854099132564024210137e-01;
            K_weights[ 6] =  2.044329400752988924141619992346491e-01;
            K_weights[ 7] =  2.094821410847278280129991748917143e-01;
            K_weights[ 8] =  2.044329400752988924141619992346491e-01;
            K_weights[ 9] =  1.903505780647854099132564024210137e-01;
            K_weights[10] =  1.690047266392679028265834265985503e-01;
            K_weights[11] =  1.406532597155259187451895905102379e-01;
            K_weights[12] =  1.047900103222501838398763225415180e-01;
            K_weights[13] =  6.309209262997855329070066318920429e-02;
            K_weights[14] =  2.293532201052922496373200805896959e-02;

        } return;

        case 21:
        {
            nodes[ 0]     = -9.956571630258080807355272806890028e-01;
            nodes[ 1]     = -9.739065285171717200779640120844521e-01;
            nodes[ 2]     = -9.301574913557082260012071800595083e-01;
            nodes[ 3]     = -8.650633666889845107320966884234930e-01;
            nodes[ 4]     = -7.808177265864168970637175783450424e-01;
            nodes[ 5]     = -6.794095682990244062343273651148736e-01;
            nodes[ 6]     = -5.627571346686046833390000992726941e-01;
            nodes[ 7]     = -4.333953941292471907992659431657842e-01;
            nodes[ 8]     = -2.943928627014601981311266031038656e-01;
            nodes[ 9]     = -1.488743389816312108848260011297200e-01;
            nodes[10]     =  0.0;
            nodes[11]     =  1.488743389816312108848260011297200e-01;
            nodes[12]     =  2.943928627014601981311266031038656e-01;
            nodes[13]     =  4.333953941292471907992659431657842e-01;
            nodes[14]     =  5.627571346686046833390000992726941e-01;
            nodes[15]     =  6.794095682990244062343273651148736e-01;
            nodes[16]     =  7.808177265864168970637175783450424e-01;
            nodes[17]     =  8.650633666889845107320966884234930e-01;
            nodes[18]     =  9.301574913557082260012071800595083e-01;
            nodes[19]     =  9.739065285171717200779640120844521e-01;
            nodes[20]     =  9.956571630258080807355272806890028e-01;

            G_weights[ 0] =  6.667134430868813759356880989333179e-02;
            G_weights[ 1] =  1.494513491505805931457763396576973e-01;
            G_weights[ 2] =  2.190863625159820439955349342281632e-01;
            G_weights[ 3] =  2.692667193099963550912269215694694e-01;
            G_weights[ 4] =  2.955242247147528701738929946513383e-01;
            G_weights[ 5] =  2.955242247147528701738929946513383e-01;
            G_weights[ 6] =  2.692667193099963550912269215694694e-01;
            G_weights[ 7] =  2.190863625159820439955349342281632e-01;
            G_weights[ 8] =  1.494513491505805931457763396576973e-01;
            G_weights[ 9] =  6.667134430868813759356880989333179e-02;

            K_weights[ 0] =  1.169463886737187427806439606219205e-02;
            K_weights[ 1] =  3.255816230796472747881897245938976e-02;
            K_weights[ 2] =  5.475589657435199603138130024458018e-02;
            K_weights[ 3] =  7.503967481091995276704314091619001e-02;
            K_weights[ 4] =  9.312545458369760553506546508336634e-02;
            K_weights[ 5] =  1.093871588022976418992105903258050e-01;
            K_weights[ 6] =  1.234919762620658510779581098310742e-01;
            K_weights[ 7] =  1.347092173114733259280540017717068e-01;
            K_weights[ 8] =  1.427759385770600807970942731387171e-01;
            K_weights[ 9] =  1.477391049013384913748415159720680e-01;
            K_weights[10] =  1.494455540029169056649364683898212e-01;
            K_weights[11] =  1.477391049013384913748415159720680e-01;
            K_weights[12] =  1.427759385770600807970942731387171e-01;
            K_weights[13] =  1.347092173114733259280540017717068e-01;
            K_weights[14] =  1.234919762620658510779581098310742e-01;
            K_weights[15] =  1.093871588022976418992105903258050e-01;
            K_weights[16] =  9.312545458369760553506546508336634e-02;
            K_weights[17] =  7.503967481091995276704314091619001e-02;
            K_weights[18] =  5.475589657435199603138130024458018e-02;
            K_weights[19] =  3.255816230796472747881897245938976e-02;
            K_weights[20] =  1.169463886737187427806439606219205e-02;

        } return;

        case 31:
        {
            nodes[ 0]     = -9.980022986933970602851728401522712e-01;
            nodes[ 1]     = -9.879925180204854284895657185866126e-01;
            nodes[ 2]     = -9.677390756791391342573479787843372e-01;
            nodes[ 3]     = -9.372733924007059043077589477102095e-01;
            nodes[ 4]     = -8.972645323440819008825096564544959e-01;
            nodes[ 5]     = -8.482065834104272162006483207742169e-01;
            nodes[ 6]     = -7.904185014424659329676492948179473e-01;
            nodes[ 7]     = -7.244177313601700474161860546139380e-01;
            nodes[ 8]     = -6.509967412974169705337358953132747e-01;
            nodes[ 9]     = -5.709721726085388475372267372539106e-01;
            nodes[10]     = -4.850818636402396806936557402323506e-01;
            nodes[11]     = -3.941513470775633698972073709810455e-01;
            nodes[12]     = -2.991800071531688121667800242663890e-01;
            nodes[13]     = -2.011940939974345223006283033945962e-01;
            nodes[14]     = -1.011420669187174990270742314473923e-01;
            nodes[15]     =  0.0;
            nodes[16]     =  1.011420669187174990270742314473923e-01;
            nodes[17]     =  2.011940939974345223006283033945962e-01;
            nodes[18]     =  2.991800071531688121667800242663890e-01;
            nodes[19]     =  3.941513470775633698972073709810455e-01;
            nodes[20]     =  4.850818636402396806936557402323506e-01;
            nodes[21]     =  5.709721726085388475372267372539106e-01;
            nodes[22]     =  6.509967412974169705337358953132747e-01;
            nodes[23]     =  7.244177313601700474161860546139380e-01;
            nodes[24]     =  7.904185014424659329676492948179473e-01;
            nodes[25]     =  8.482065834104272162006483207742169e-01;
            nodes[26]     =  8.972645323440819008825096564544959e-01;
            nodes[27]     =  9.372733924007059043077589477102095e-01;
            nodes[28]     =  9.677390756791391342573479787843372e-01;
            nodes[29]     =  9.879925180204854284895657185866126e-01;
            nodes[30]     =  9.980022986933970602851728401522712e-01;

            G_weights[ 0] =  3.075324199611726835462839357720442e-02;
            G_weights[ 1] =  7.036604748810812470926741645066734e-02;
            G_weights[ 2] =  1.071592204671719350118695466858693e-01;
            G_weights[ 3] =  1.395706779261543144478047945110283e-01;
            G_weights[ 4] =  1.662692058169939335532008604812088e-01;
            G_weights[ 5] =  1.861610000155622110268005618664228e-01;
            G_weights[ 6] =  1.984314853271115764561183264438393e-01;
            G_weights[ 7] =  2.025782419255612728806201999675193e-01;
            G_weights[ 8] =  1.984314853271115764561183264438393e-01;
            G_weights[ 9] =  1.861610000155622110268005618664228e-01;
            G_weights[10] =  1.662692058169939335532008604812088e-01;
            G_weights[11] =  1.395706779261543144478047945110283e-01;
            G_weights[12] =  1.071592204671719350118695466858693e-01;
            G_weights[13] =  7.036604748810812470926741645066734e-02;
            G_weights[14] =  3.075324199611726835462839357720442e-02;

            K_weights[ 0] =  5.377479872923348987792051430127650e-03;
            K_weights[ 1] =  1.500794732931612253837476307580727e-02;
            K_weights[ 2] =  2.546084732671532018687400101965336e-02;
            K_weights[ 3] =  3.534636079137584622203794847836005e-02;
            K_weights[ 4] =  4.458975132476487660822729937327969e-02;
            K_weights[ 5] =  5.348152469092808726534314723943030e-02;
            K_weights[ 6] =  6.200956780067064028513923096080293e-02;
            K_weights[ 7] =  6.985412131872825870952007709914748e-02;
            K_weights[ 8] =  7.684968075772037889443277748265901e-02;
            K_weights[ 9] =  8.308050282313302103828924728610379e-02;
            K_weights[10] =  8.856444305621177064727544369377430e-02;
            K_weights[11] =  9.312659817082532122548687274734572e-02;
            K_weights[12] =  9.664272698362367850517990762758934e-02;
            K_weights[13] =  9.917359872179195933239317348460313e-02;
            K_weights[14] =  1.007698455238755950449466626175697e-01;
            K_weights[15] =  1.013300070147915490173747927674925e-01;
            K_weights[16] =  1.007698455238755950449466626175697e-01;
            K_weights[17] =  9.917359872179195933239317348460313e-02;
            K_weights[18] =  9.664272698362367850517990762758934e-02;
            K_weights[19] =  9.312659817082532122548687274734572e-02;
            K_weights[20] =  8.856444305621177064727544369377430e-02;
            K_weights[21] =  8.308050282313302103828924728610379e-02;
            K_weights[22] =  7.684968075772037889443277748265901e-02;
            K_weights[23] =  6.985412131872825870952007709914748e-02;
            K_weights[24] =  6.200956780067064028513923096080293e-02;
            K_weights[25] =  5.348152469092808726534314723943030e-02;
            K_weights[26] =  4.458975132476487660822729937327969e-02;
            K_weights[27] =  3.534636079137584622203794847836005e-02;
            K_weights[28] =  2.546084732671532018687400101965336e-02;
            K_weights[29] =  1.500794732931612253837476307580727e-02;
            K_weights[30] =  5.377479872923348987792051430127650e-03;

        } return;

        case 41:
        {
            nodes[ 0]     = -9.988590315882776638383155765458630e-01;
            nodes[ 1]     = -9.931285991850949247861223884713203e-01;
            nodes[ 2]     = -9.815078774502502591933429947202169e-01;
            nodes[ 3]     = -9.639719272779137912676661311972772e-01;
            nodes[ 4]     = -9.408226338317547535199827222124434e-01;
            nodes[ 5]     = -9.122344282513259058677524412032981e-01;
            nodes[ 6]     = -8.782768112522819760774429951130785e-01;
            nodes[ 7]     = -8.391169718222188233945290617015207e-01;
            nodes[ 8]     = -7.950414288375511983506388332727879e-01;
            nodes[ 9]     = -7.463319064601507926143050703556416e-01;
            nodes[10]     = -6.932376563347513848054907118459315e-01;
            nodes[11]     = -6.360536807265150254528366962262859e-01;
            nodes[12]     = -5.751404468197103153429460365864251e-01;
            nodes[13]     = -5.108670019508270980043640509552510e-01;
            nodes[14]     = -4.435931752387251031999922134926401e-01;
            nodes[15]     = -3.737060887154195606725481770249272e-01;
            nodes[16]     = -3.016278681149130043205553568585923e-01;
            nodes[17]     = -2.277858511416450780804961953685746e-01;
            nodes[18]     = -1.526054652409226755052202410226775e-01;
            nodes[19]     = -7.652652113349733375464040939883821e-02;
            nodes[20]     =  0.0;
            nodes[21]     =  7.652652113349733375464040939883821e-02;
            nodes[22]     =  1.526054652409226755052202410226775e-01;
            nodes[23]     =  2.277858511416450780804961953685746e-01;
            nodes[24]     =  3.016278681149130043205553568585923e-01;
            nodes[25]     =  3.737060887154195606725481770249272e-01;
            nodes[26]     =  4.435931752387251031999922134926401e-01;
            nodes[27]     =  5.108670019508270980043640509552510e-01;
            nodes[28]     =  5.751404468197103153429460365864251e-01;
            nodes[29]     =  6.360536807265150254528366962262859e-01;
            nodes[30]     =  6.932376563347513848054907118459315e-01;
            nodes[31]     =  7.463319064601507926143050703556416e-01;
            nodes[32]     =  7.950414288375511983506388332727879e-01;
            nodes[33]     =  8.391169718222188233945290617015207e-01;
            nodes[34]     =  8.782768112522819760774429951130785e-01;
            nodes[35]     =  9.122344282513259058677524412032981e-01;
            nodes[36]     =  9.408226338317547535199827222124434e-01;
            nodes[37]     =  9.639719272779137912676661311972772e-01;
            nodes[38]     =  9.815078774502502591933429947202169e-01;
            nodes[39]     =  9.931285991850949247861223884713203e-01;
            nodes[40]     =  9.988590315882776638383155765458630e-01;

            G_weights[ 0] =  1.761400713915211831186196235185282e-02;
            G_weights[ 1] =  4.060142980038694133103995227493211e-02;
            G_weights[ 2] =  6.267204833410906356950653518704161e-02;
            G_weights[ 3] =  8.327674157670474872475814322204621e-02;
            G_weights[ 4] =  1.019301198172404350367501354803499e-01;
            G_weights[ 5] =  1.181945319615184173123773777113823e-01;
            G_weights[ 6] =  1.316886384491766268984944997481631e-01;
            G_weights[ 7] =  1.420961093183820513292983250671649e-01;
            G_weights[ 8] =  1.491729864726037467878287370019694e-01;
            G_weights[ 9] =  1.527533871307258506980843319550976e-01;
            G_weights[10] =  1.527533871307258506980843319550976e-01;
            G_weights[11] =  1.491729864726037467878287370019694e-01;
            G_weights[12] =  1.420961093183820513292983250671649e-01;
            G_weights[13] =  1.316886384491766268984944997481631e-01;
            G_weights[14] =  1.181945319615184173123773777113823e-01;
            G_weights[15] =  1.019301198172404350367501354803499e-01;
            G_weights[16] =  8.327674157670474872475814322204621e-02;
            G_weights[17] =  6.267204833410906356950653518704161e-02;
            G_weights[18] =  4.060142980038694133103995227493211e-02;
            G_weights[19] =  1.761400713915211831186196235185282e-02;

            K_weights[ 0] =  3.073583718520531501218293246030987e-03;
            K_weights[ 1] =  8.600269855642942198661787950102347e-03;
            K_weights[ 2] =  1.462616925697125298378796030886836e-02;
            K_weights[ 3] =  2.038837346126652359801023143275471e-02;
            K_weights[ 4] =  2.588213360495115883450506709615314e-02;
            K_weights[ 5] =  3.128730677703279895854311932380074e-02;
            K_weights[ 6] =  3.660016975820079803055724070721101e-02;
            K_weights[ 7] =  4.166887332797368626378830593689474e-02;
            K_weights[ 8] =  4.643482186749767472023188092610752e-02;
            K_weights[ 9] =  5.094457392372869193270767005034495e-02;
            K_weights[10] =  5.519510534828599474483237241977733e-02;
            K_weights[11] =  5.911140088063957237496722064859422e-02;
            K_weights[12] =  6.265323755478116802587012217425498e-02;
            K_weights[13] =  6.583459713361842211156355696939794e-02;
            K_weights[14] =  6.864867292852161934562341188536780e-02;
            K_weights[15] =  7.105442355344406830579036172321017e-02;
            K_weights[16] =  7.303069033278666749518941765891311e-02;
            K_weights[17] =  7.458287540049918898658141836248753e-02;
            K_weights[18] =  7.570449768455667465954277537661656e-02;
            K_weights[19] =  7.637786767208073670550283503806100e-02;
            K_weights[20] =  7.660071191799965644504990153010174e-02;
            K_weights[21] =  7.637786767208073670550283503806100e-02;
            K_weights[22] =  7.570449768455667465954277537661656e-02;
            K_weights[23] =  7.458287540049918898658141836248753e-02;
            K_weights[24] =  7.303069033278666749518941765891311e-02;
            K_weights[25] =  7.105442355344406830579036172321017e-02;
            K_weights[26] =  6.864867292852161934562341188536780e-02;
            K_weights[27] =  6.583459713361842211156355696939794e-02;
            K_weights[28] =  6.265323755478116802587012217425498e-02;
            K_weights[29] =  5.911140088063957237496722064859422e-02;
            K_weights[30] =  5.519510534828599474483237241977733e-02;
            K_weights[31] =  5.094457392372869193270767005034495e-02;
            K_weights[32] =  4.643482186749767472023188092610752e-02;
            K_weights[33] =  4.166887332797368626378830593689474e-02;
            K_weights[34] =  3.660016975820079803055724070721101e-02;
            K_weights[35] =  3.128730677703279895854311932380074e-02;
            K_weights[36] =  2.588213360495115883450506709615314e-02;
            K_weights[37] =  2.038837346126652359801023143275471e-02;
            K_weights[38] =  1.462616925697125298378796030886836e-02;
            K_weights[39] =  8.600269855642942198661787950102347e-03;
            K_weights[40] =  3.073583718520531501218293246030987e-03;

        } return;

        default:
            throw std::invalid_argument( "Gauss-Kronrod quadrature of order " + std::to_string(n)
                                         + " not found in table." );
    }
}
